# API's

___________________________________________________________________________________________________
## AUTH PAGE

1. Signup (Traditional way)

    => POST /api/v1/auth/signup 
     {
        "name" : "drishti",
        "email" : "drishti@gmail.com",
        "passowrd" : "kjshjsbjvknckj",
        "DOB" : {
            "date" : "1",
            "month" : "01",
            "year" : "2004" 
        },
        "country" : "India",
        "phoneNumber" : "8576827468"
        "type" : "Admin" or "user",
        "refreshToken": "your_refresh_token",

     }

    =>  return status: code 200(success) 
     {
        "userId" : "1",
        "token": "your_jwt_token",
        "type": "user",
        "expiresIn": 3600

     }

    => error : 400 ,500 ,409 , 422

    400 
    {
        "error" : "fields missing"
    }

    500
    {
        "error" : "Server-side error"
    }

    409
    {
        "error" : "Email already exists"
     }

     422
     {
        "error" : "invalid password format"
     }

       
           

2. Signin/Login (Traditional way)

    POST /api/v1/auth/login
    {
        "email" : "drishti@gmail.com",
        "passowrd" : "kjshjsbjvknckj"
    }

    return status: code 200 
    {
        "token" : "dhjchskubcshbjsdcsdcsnbdjc",
        "expiresIn": 3600,
        "refreshToken": "your_refresh_token",


    }

    error: 500 , 400 , 403 , 401

            500
            {
                "error" : "Server-side error

            400
            {
                "error" : "missing fields either email or password"
            }

            401 
            {
                "error" : "Invalid email or password"
            }

            403
            {
                "error" : "user not verified (forbidden req)"
            }


3. Signup / login ( both are same for 0auth )

    => POST api/v1/auth/oauth
     {
        "provider": "google" / "apple" / etc...,
        "accessToken" : "your_access_token"
     }

     => return status : 200 (success)

     {
    "user": {
        "id": "123",
        "email": "user@example.com",
        "name": "John Doe",
        "avatar": "https://lh3.googleusercontent.com/...",
        "email" : "drishti@gmail.com",
        "provider": "google"
    },
    "token": "your_jwt_token",
    "expiresIn": 3600
    }

     error: 401 Unauthorized 
            {
                "error" : "Invalid or expired acess token"
            }

            400 Bad Request
            {
                "error" : "access token is required"
            }
            500
            {
                "error" : "internal error"
            }

4. forgot password

    => POST api/v1/auth/forgot-password 
            {
                "email" : "drishti@gmail.com"
            }

        return status: 200 
            {
                "message" : "If the email exists, a reset link has been sent"
            }

         

___________________________________________________________________________________________________

## User account

1. POST /api/v1/user/metadata

update the user's metadata:


Authorization: Bearer your_jwt_token
Content-Type: application/json
{
    "name" : "drishtitanwar"
}

response : 200 (success)

{
    "message: "updated successfully",
    "user" : {
        "id" : "123",
        "name" : "drishtitanwar"
    }
 }

 2. GET api/v1/users

get all users:

 return : 200 (success)
 {
    "status"" : "success",
    "users" : [
        {
            "id" : "123",
            "name" : "drishti",
            "email" : "dristhi@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "google",
            "createdAt" : "2024-02-26T10:00:00Z"
        },
        {
            "id": "456",
            "name": "Alice Smith",
            "email": "alice@example.com",
            "avatar": "https://lh3.googleusercontent.com/...",
            "provider": "apple",
            "createdAt": "2024-02-25T12:30:00Z"
        }.
        {
            ....
        },
        {
            ....
        }
    ]
 }

 error: 404 (not found)
 {
    "message" : "users not found"
 }

 3. to get specifuc users

  GET /api/v1/user/metadata/bulk?ids=[1,3,5]

  returns : 200 
  {
    "status" : "success" ,
    "users" : [
        {
          "id" : "1",
            "name" : "drishti",
            "email" : "dristhi@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "google",
            "createdAt" : "2024-02-26T10:00:00Z"
        },  
        {
            "id" : "3",
            "name" : "sam",
            "email" : "sam@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "google",
            "createdAt" : "2024-04-26T10:00:00Z"
        },
        {
            "id" : "5",
            "name" : "alex",
            "email" : "alex@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "apple",
            "createdAt" : "2024-10-26T10:00:00Z"
        },
        }
        
    ]
  }


4. particular user's order list

 GET api/v1/user/order

Authorization: Bearer your_jwt_token // for verfification of the user


{
  "orders": [
    {
      "id": "ORD123456",
      "createdAt": "2025-02-26T10:15:30Z",
      "status": "Delivered",
      "totalAmount": 129.99,
      "payment": {
        "paymentId": "pay_29QQoUBi66xm2f",
        "method": "card",
        "status": "success",
        "transactionAmount": 129.99,
        "currency": "INR",
        "card": {
          "last4": "4242",
          "network": "Visa",
          "type": "credit"
        }
      },
      "shippingAddress": {
        "fullName": "John Doe",
        "street": "123 Main St",
        "city": "New York",
        "state": "NY",
        "zipCode": "10001",
        "country": "USA"
      },
      "estimatedDelivery": "2025-02-20",
      "items": [
        {
          "productId": "PROD001",
          "name": "Wireless Gaming Mouse",
          "price": 59.99,
          "quantity": 1,
          "image": "https://example.com/images/mouse.jpg"
        }
      ]
    }, 
    {
      ..................
    },
    {
        .................
    }
  ]
}

___________________________________________________________________________________________________
## Products


1. to get all the products list

 GET api/v1/products

 return : 200 
 {
  "id": "CLOTH123",
  "name": "Men's Oversized Hoodie",
  "description": "A comfortable oversized hoodie made from premium cotton blend, perfect for casual wear.",
  "brand": "Nike",
  "category": "Men > Hoodies & Sweatshirts",
  "price": 49.99,
  "discountPrice": 39.99,
  "currency": "USD",
  "stock": {
    "quantity": 200,
    "status": "in_stock"
  },
  "sizes": ["S", "M", "L", "XL", "XXL"],
  "colors": [
    {
      "name": "Black",
      "hex": "#000000",
      "image": "https://example.com/images/hoodie-black.jpg"
    },
    {
      "name": "Beige",
      "hex": "#F5F5DC",
      "image": "https://example.com/images/hoodie-beige.jpg"
    }
  ],
  "variants": [
    {
      "id": "CLOTH123-BLACK-S",
      "color": "Black",
      "size": "S",
      "stock": 50
    },
    {
      "id": "CLOTH123-BLACK-M",
      "color": "Black",
      "size": "M",
      "stock": 40
    },
    {
      "id": "CLOTH123-BEIGE-L",
      "color": "Beige",
      "size": "L",
      "stock": 30
    }
  ],
  "fabric": "80% Cotton, 20% Polyester",
  "fit": "Oversized",
  "gender": "Men",
  "season": "Fall/Winter",
  "images": [
    "https://example.com/images/hoodie-front.jpg",
    "https://example.com/images/hoodie-back.jpg"
  ],
  "rating": 4.7,
  "reviewsCount": 320,
  "careInstructions": [
    "Machine wash cold",
    "Do not bleach",
    "Tumble dry low",
    "Iron on low heat"
  ],
  "shipping": {
    "freeShipping": true,
    "estimatedDelivery": "3-5 days"
  },
  "returnPolicy": "30-day return policy",
  "paymentOptions": ["Credit Card", "UPI", "Net Banking", "Wallet", "EMI", "Buy Now Pay Later"],
  "metadata": {
    "seoTitle": "Men's Oversized Hoodie - Comfortable & Stylish",
    "seoDescription": "Buy the best oversized hoodie for men. Premium cotton blend, perfect for casual wear in fall and winter.",
    "createdAt": "2025-02-26T10:15:30Z",
    "updatedAt": "2025-02-27T08:00:00Z"
  }
}


________________________________________________________________________________
| Role-Based Access Control (RBAC):                                             |
| Customer	        - View their own orders, track order status                 |
| Admin	            - Manage all orders, update status, assign deliveries       |
| Delivery Partner	- Update order status to "Out for Delivery" or "Delivered"  |
|_______________________________________________________________________________|


      

