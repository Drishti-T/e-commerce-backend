# API's

___________________________________________________________________________________________________
## AUTH PAGE

1. Signup (Traditional way)

    => POST /api/v1/auth/signup 
     {
        "name" : "drishti",
        "email" : "drishti@gmail.com",
        "passowrd" : "kjshjsbjvknckj",
        "DOB" : {
            "date" : "1",
            "month" : "01",
            "year" : "2004" 
        },
        "country" : "India",
        "phoneNumber" : "8576827468"
        "type" : "Admin" or "user",
        "refreshToken": "your_refresh_token",

     }

    =>  return status: code 200(success) 
     {
        "userId" : "1",
        "token": "your_jwt_token",
        "type": "user",
        "expiresIn": 3600

     }

    => error : 400 ,500 ,409 , 422

    400 
    {
        "error" : "fields missing"
    }

    500
    {
        "error" : "Server-side error"
    }

    409
    {
        "error" : "Email already exists"
     }

     422
     {
        "error" : "invalid password format"
     }

       
           

2. Signin/Login (Traditional way)

    POST /api/v1/auth/login
    {
        "email" : "drishti@gmail.com",
        "passowrd" : "kjshjsbjvknckj"
    }

    return status: code 200 
    {
        "token" : "dhjchskubcshbjsdcsdcsnbdjc",
        "expiresIn": 3600,
        "refreshToken": "your_refresh_token",


    }

    error: 500 , 400 , 403 , 401

            500
            {
                "error" : "Server-side error

            400
            {
                "error" : "missing fields either email or password"
            }

            401 
            {
                "error" : "Invalid email or password"
            }

            403
            {
                "error" : "user not verified (forbidden req)"
            }


3. Signup / login ( both are same for 0auth )

    => POST api/v1/auth/oauth
     {
        "provider": "google" / "apple" / etc...,
        "accessToken" : "your_access_token"
     }

     => return status : 200 (success)

     {
    "user": {
        "id": "123",
        "email": "user@example.com",
        "name": "John Doe",
        "avatar": "https://lh3.googleusercontent.com/...",
        "email" : "drishti@gmail.com",
        "provider": "google"
    },
    "token": "your_jwt_token",
    "expiresIn": 3600
    }

     error: 401 Unauthorized 
            {
                "error" : "Invalid or expired acess token"
            }

            400 Bad Request
            {
                "error" : "access token is required"
            }
            500
            {
                "error" : "internal error"
            }

4. forgot password

    => POST api/v1/auth/forgot-password 
            {
                "email" : "drishti@gmail.com"
            }

        return status: 200 
            {
                "message" : "If the email exists, a reset link has been sent"
            }

         

___________________________________________________________________________________________________

## User account

1. POST /api/v1/user/metadata

update the user's metadata:


Authorization: Bearer your_jwt_token
Content-Type: application/json
{
    "name" : "drishtitanwar"
}

response : 200 (success)

{
    "message: "updated successfully",
    "user" : {
        "id" : "123",
        "name" : "drishtitanwar"
    }
 }

 2. GET api/v1/usersadmin/allUsers

 authentication is req to get all user info ( only for super admins )

 Authorization: Bearer <JWT_TOKEN>


get all users:

 return : 200 (success)
 {
    "status"" : "success",
    "users" : [
        {
            "id" : "123",
            "name" : "drishti",
            "email" : "dristhi@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "google",
            "createdAt" : "2024-02-26T10:00:00Z"
        },
        {
            "id": "456",
            "name": "Alice Smith",
            "email": "alice@example.com",
            "avatar": "https://lh3.googleusercontent.com/...",
            "provider": "apple",
            "createdAt": "2024-02-25T12:30:00Z"
        }.
        {
            ....
        },
        {
            ....
        }
    ]
 }

 error: 404 (not found)
 {
    "message" : "users not found"
 }

 3. to get specifuc users

 
 authentication is req to get all user info ( only for super admins )

 Authorization: Bearer <JWT_TOKEN>


  GET /api/v1/admin/users/metadata/bulk?ids=[1,3,5]

  returns : 200 
  {
    "status" : "success" ,
    "users" : [
        {
          "id" : "1",
            "name" : "drishti",
            "email" : "dristhi@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "google",
            "createdAt" : "2024-02-26T10:00:00Z"
        },  
        {
            "id" : "3",
            "name" : "sam",
            "email" : "sam@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "google",
            "createdAt" : "2024-04-26T10:00:00Z"
        },
        {
            "id" : "5",
            "name" : "alex",
            "email" : "alex@gmail.com",
            "avatar" : "https://.....url"
            "provider" : "apple",
            "createdAt" : "2024-10-26T10:00:00Z"
        },
        }
        
    ]
  }


4. particular user's order list

 GET api/v1/user/order

Authorization: Bearer your_jwt_token // for verfification of the user


{
  "orders": [
    {
      "id": "ORD123456",
      "createdAt": "2025-02-26T10:15:30Z",
      "status": "Delivered",
      "totalAmount": 129.99,
      "payment": {
        "paymentId": "pay_29QQoUBi66xm2f",
        "method": "card",
        "status": "success",
        "transactionAmount": 129.99,
        "currency": "INR",
        "card": {
          "last4": "4242",
          "network": "Visa",
          "type": "credit"
        }
      },
      "shippingAddress": {
        "fullName": "John Doe",
        "street": "123 Main St",
        "city": "New York",
        "state": "NY",
        "zipCode": "10001",
        "country": "USA"
      },
      "estimatedDelivery": "2025-02-20",
      "items": [
        {
          "productId": "PROD001",
          "name": "Wireless Gaming Mouse",
          "price": 59.99,
          "quantity": 1,
          "image": "https://example.com/images/mouse.jpg"
        }
      ]
    }, 
    {
      ..................
    },
    {
        .................
    }
  ]
}

___________________________________________________________________________________________________
## Products CRUD


1. to get all the products list

 GET api/v1/products ( access to all to view all the products )

 return : 200 
 {
  "id": "CLOTH123",
  "name": "Men's Oversized Hoodie",
  "description": "A comfortable oversized hoodie made from premium cotton blend, perfect for casual wear.",
  "brand": "Nike",
  "category": "Men > Hoodies & Sweatshirts",
  "price": 49.99,
  "discountPrice": 39.99,
  "currency": "USD",
  "stock": {
    "quantity": 200,
    "status": "in_stock"
  },
  "sizes": ["S", "M", "L", "XL", "XXL"],
  "colors": [
    {
      "name": "Black",
      "hex": "#000000",
      "image": "https://example.com/images/hoodie-black.jpg"
    },
    {
      "name": "Beige",
      "hex": "#F5F5DC",
      "image": "https://example.com/images/hoodie-beige.jpg"
    }
  ],
  "variants": [
    {
      "id": "CLOTH123-BLACK-S",
      "color": "Black",
      "size": "S",
      "stock": 50
    },
    {
      "id": "CLOTH123-BLACK-M",
      "color": "Black",
      "size": "M",
      "stock": 40
    },
    {
      "id": "CLOTH123-BEIGE-L",
      "color": "Beige",
      "size": "L",
      "stock": 30
    }
  ],
  "fabric": "80% Cotton, 20% Polyester",
  "fit": "Oversized",
  "gender": "Men",
  "season": "Fall/Winter",
  "images": [
    "https://example.com/images/hoodie-front.jpg",
    "https://example.com/images/hoodie-back.jpg"
  ],
  "rating": 4.7,
  "reviewsCount": 320,
  "careInstructions": [
    "Machine wash cold",
    "Do not bleach",
    "Tumble dry low",
    "Iron on low heat"
  ],
  "shipping": {
    "freeShipping": true,
    "estimatedDelivery": "3-5 days"
  },
  "returnPolicy": "30-day return policy",
  "paymentOptions": ["Credit Card", "UPI", "Net Banking", "Wallet", "EMI", "Buy Now Pay Later"],
  "metadata": {
    "seoTitle": "Men's Oversized Hoodie - Comfortable & Stylish",
    "seoDescription": "Buy the best oversized hoodie for men. Premium cotton blend, perfect for casual wear in fall and winter.",
    "createdAt": "2025-02-26T10:15:30Z",
    "updatedAt": "2025-02-27T08:00:00Z"
  }
}




      
2. to add a new product to the site ( only auper-admins , product manager access allowed )

authentication req. for super-admins , product manager

Authorization: Bearer your_jwt_token (for super-admins/product manager)
Content-Type: application/json

POST api/v1/admin/product

request body: 

{
  "name": "Men's Oversized Hoodie",
  "description": "A comfortable oversized hoodie made from premium cotton blend, perfect for casual wear.",
  "brand": "Nike",
  "category": "Men > Hoodies & Sweatshirts",
  "price": 49.99,
  "discountPrice": 39.99,
  "currency": "USD",
  "stock": {
    "quantity": 200,
    "status": "in_stock"
  },
  "sizes": ["S", "M", "L", "XL", "XXL"],
  "colors": [
    {
      "name": "Black",
      "hex": "#000000",
      "image": "https://example.com/images/hoodie-black.jpg"
    },
    {
      "name": "Beige",
      "hex": "#F5F5DC",
      "image": "https://example.com/images/hoodie-beige.jpg"
    }
  ],
  "variants": [
    {
      "color": "Black",
      "size": "S",
      "stock": 50
    },
    {
      "color": "Black",
      "size": "M",
      "stock": 40
    },
    {
      "color": "Beige",
      "size": "L",
      "stock": 30
    }
  ],
  "fabric": "80% Cotton, 20% Polyester",
  "fit": "Oversized",
  "gender": "Men",
  "season": "Fall/Winter",
  "images": [
    "https://example.com/images/hoodie-front.jpg",
    "https://example.com/images/hoodie-back.jpg"
  ],
  "careInstructions": [
    "Machine wash cold",
    "Do not bleach",
    "Tumble dry low",
    "Iron on low heat"
  ],
  "shipping": {
    "freeShipping": true,
    "estimatedDelivery": "3-5 days"
  },
  "returnPolicy": "30-day return policy",
  "paymentOptions": ["Credit Card", "UPI", "Net Banking", "Wallet", "EMI", "Buy Now Pay Later"],
  "metadata": {
    "seoTitle": "Men's Oversized Hoodie - Comfortable & Stylish",
    "seoDescription": "Buy the best oversized hoodie for men. Premium cotton blend, perfect for casual wear in fall and winter.",
  }
}

respoonse : 200 (success)

{
  "success" : true,
  "message" : "Product added successfully",
  "product" : {
    "id": "123e4567-e89b-12d3-a456-426614174000",
    "name": "Men's Oversized Hoodie",
    "createdAt": "2025-02-26T10:15:30Z"
  }
}

error: 

for JWT Missing or Invalid : 
{
  "success" : false,
  "code" : 401,
  "message" : "Unauthorized . Please log in"
}


for User is Not Super-Admin or Product Manager : 
{
  "success": false,
  "code" : 403,
  "message": "Access denied. Only super-admins and product managers can add products."
}

for Missing Required Fields : 

{
"success" : false,
"code" : 400,
"message" : "Missing fields"
}

3. to get a specific product using productId

we dont need aunthentication for basic product info as frontend also req's it ans users who havnt signedup or loggedin can also browse the site
GET api/v1/product/:id

response body:
{
  "id": "CLOTH123",
  "name": "Men's Oversized Hoodie",
  "description": "A comfortable oversized hoodie made from premium cotton blend, perfect for casual wear.",
  "brand": "Nike",
  "category": "Men > Hoodies & Sweatshirts",
  "price": 49.99,
  "discountPrice": 39.99,
  "currency": "USD",
  "stock": {
    "quantity": 200,
    "status": "in_stock"
  },
  "sizes": ["S", "M", "L"],
  "colors": [
    {
      "name": "Black",
      "hex": "#000000",
      "image": "https://example.com/images/hoodie-black.jpg"
    },
    {
      "name": "Beige",
      "hex": "#F5F5DC",
      "image": "https://example.com/images/hoodie-beige.jpg"
    }
  ],
  "variants": [
    {
      "id": "CLOTH123-BLACK-S",
      "color": "Black",
      "size": "S",
      "stock": 50
    },
    {
      "id": "CLOTH123-BLACK-M",
      "color": "Black",
      "size": "M",
      "stock": 40
    },
    {
      "id": "CLOTH123-BEIGE-L",
      "color": "Beige",
      "size": "L",
      "stock": 30
    }
  ],
  "fabric": "80% Cotton, 20% Polyester",
  "fit": "Oversized",
  "gender": "Men",
  "season": "Fall/Winter",
  "images": [
    "https://example.com/images/hoodie-front.jpg",
    "https://example.com/images/hoodie-back.jpg"
  ],
  "rating": 4.7,
  "reviewsCount": 320,
  "careInstructions": [
    "Machine wash cold",
    "Do not bleach",
    "Tumble dry low",
    "Iron on low heat"
  ],
  "shipping": {
    "freeShipping": true,
    "estimatedDelivery": "3-5 days"
  },
  "returnPolicy": "30-day return policy",
  "paymentOptions": [
    "Credit Card",
    "UPI",
    "Net Banking",
    "Wallet",
    "EMI",
    "Buy Now Pay Later"
  ],
  "metadata": {
    "seoTitle": "Men's Oversized Hoodie - Comfortable & Stylish",
    "seoDescription": "Buy the best oversized hoodie for men. Premium cotton blend, perfect for casual wear in fall and winter."
  }
}

error : 

if product not found
{
  "success" : false,
  "code" : 404,
  "message" : "Product not found"
}


4. delete a product

authentication req  ( only super-admins and product manager)


Authorization Bearer <JWT_TOKEN>

DELETE api/v1/product/:id

response : 200 

{
  "success": true,
  "code": 200,
  "message": "Product deleted successfully"
}

error : 

{
  "success" : false,
  "code" : 401,
  "message" : "Unauthorized . Please log in "
}

{
  "success" : false,
  "code " : 403,
  "message": "Access denied. Only super-admins and product managers can add products."

}

{
  "success": false,
  "code": 400,
  "message": "Invalid product ID format."
}

{
  "success": false,
  "code": 404,
  "message": "product not found."
}

6. update a product

aunthentication is required(only super-admins or prodcut manager can update a product)

Authorization Bearer <JWT_TOKEN>

PUT api/v1/product/:id

// only send those fields which are needed to be update
request body:
{
  "discountPrice" : 36.99
}

error : 
 Product ID does not exist.

 {
    "success" : false,
    "code" : 404,
    "message" : " Product does not exist"

 }


jwt missing or invalid
{
  "success" : false,
  "code" : 401,
  "message" : "Unauthorized . Please log in"
}


for User is Not Super-Admin or Product Manager : 
{
  "success": false,
  "code" : 403,
  "message": "Access denied. Only super-admins and product managers can add products."
}

for invalid data format: 

{
"success" : false,
"code" : 400,
"message" : "invalid data"
}


_______________________________________________________________________________
## brand

1. get all the registered brand detail on the website


GET /api/v1/brand ( access to all to view all the brands )

return : 200 (success)
{
  "success" : true ,
  "brands" : [
    {
      "ID" : "1",
      "name" : "Zara",
      "no_of_Products" : "12",
      "description": "Zara is a global fashion brand offering stylish clothing and accessories.",
      "category": ["Fashion", "Apparel"],
      "image" : "url../of/theimage/or/logo,
      "products": [
      {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "Men's Oversized Hoodie",
        "price": 49.99,
        "stock": 100
      },
      {
        "id": "223e4567-e89b-12d3-a456-426614174000",
        "name": "Men's Slim Fit Jeans",
        "price": 59.99,
        "stock": 50
      }
    ]
    },
    {
      "ID" : "2",
      "name" : "Prada",
      "no_of_Products" : "10",
      "description": "Prada is a global fashion brand offering stylish clothing and accessories.",
      "category": ["Fashion", "Apparel"],
      "image" : "url../of/theimage/or/logo,
      "products" : []
    },
    {
      ...
    },
    {
      ...
    }

  ]
}

2. ADD new brand detail

POST api/v1/brand

authentication required (only super-admins , product manager are allowed )

request body : 
{
  "name": "Zara",
  "description": "Zara is a global fashion brand offering stylish clothing and accessories.",
  "category": ["Fashion", "Apparel"],
  "image": "https://example.com/zara-logo.png"
}

response : 200

{
  "success" : true,
  "code" : 200,
  "message" : "brand deatil added"
}


error: 

{
  "success": false,
  "code": 401,
  "message": "Unauthorized. Please log in."
}


{
  "success": false,
  "code": 403,
  "message": "Access denied. Only super-admins and product managers can add brands."
}


{
  "success": false,
  "code": 400,
  "message": "Missing required fields: name, category, or image."
}

3. DELETE brand details

authentication required (only super-admins , product manager are allowed )


Authorization: Bearer your_jwt_token (for super-admins/product manager)


response : 200 
{
  "success" : true,
  "code" : 200,
  "message" : "details deleted successfully"
}

error : 

for JWT Missing or Invalid : 
{
  "success" : false,
  "code" : 401,
  "message" : "Unauthorized . Please log in"
}

for User is Not Super-Admin or Product Manager : 
{
  "success": false,
  "code" : 403,
  "message": "Access denied. Only super-admins and product managers can add products."
}

{
  "success": false,
  "code": 404,
  "message": "Brand not found."
}

{
  "success": false,
  "code": 400,
  "message": "Invalid brand ID format."
}


4. update brand details

authentication required (only super-admins , product manager are allowed )


Authorization: Bearer your_jwt_token (for super-admins/product manager)
Content-Type: application/json


PUT api/v1/brand/:id

request body :
{
  "description": "ghsd shjvhdbvhg ",
  "image" : "image/url/...."
}

response : 200 


{
  "success" : true,
  "code" : 20 ,
  "message" : "info updated successfully"
}

error : 

{
  "success" : false,
  "code" : 401,
  "message" : "Unauthorized . Please log in "
}



{
  "success" : false,
  "code " : 403,
  "message": "Access denied. Only super-admins and product managers can add products."

}

{
  "success": false,
  "code": 400,
  "message": "Invalid brand ID format."
}

{
  "success": false,
  "code": 400,
  "message": "Invalid data fromat"
}

{
  "success": false,
  "code": 404,
  "message": "brand not found."
}

_______________________________________________________________________________
## comments

1. add  a comment

authentication is required (for user)

Authorization: Bearer <JWT_TOKEN> 
Content-Type: application/json

POST api/v1/product/:id/comment


